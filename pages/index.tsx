import { GetServerSidePropsContext, InferGetServerSidePropsType } from 'next'
import { CircularProgress, Container, Typography, Box, Button, Stack } from '@mui/material'
import Head from 'next/head'
import { Fragment, useEffect } from 'react'
import NavBar from '../common/components/Header/Navbar'
import { useAuth } from '../contexts/AuthContext'
import { useRouter } from 'next/router'
import { doc, updateDoc } from 'firebase/firestore'
import { firestore } from '../common/utils/firebase/clientApp'
import { firebaseAdmin } from '../common/utils/firebase/adminApp'
import { ItemType, LoadingUserType } from '../common/types/firebase_types'
import { verifyAuthSSR } from '../common/utils/firebase/middlewares'
import { itemTypeFromFirebase } from '../common/utils/firebase/firebase_helpers'
import { Grid } from '@mui/material'
import GalleryItem from '../common/components/Gallery/GalleryItem'

// Used to include thumbnail data for safely rendering user models on dashboard




const Home = () => {
// const Home = (props: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const { loadingUser, setLoadingUser } = useAuth()
  const router = useRouter();


  return (
    (loadingUser.isLoading) ? <Container><Box component="div" width='100%' margin={10} display="flex" alignItems={'center'} justifyContent='center'><CircularProgress /></Box> </Container>:
      <Fragment>
        <Head>
          <title>HoliFi</title>
          <meta name="description" content="Generated by create next app" />
          {/* <Link rel="icon" href="/favicon.ico" /> */}
        </Head>
        {/* <NavBar bg='black' p={4} /> */}
        <Container maxWidth='lg'>

          <Box component="div" textAlign='center'>
            <Typography variant='h1' marginBottom={4}>Holifi.Ai</Typography>
            <Stack>

            </Stack>
          </Box>
        </Container>
      </Fragment>

  )
}


// export async function getServerSideProps(ctx: GetServerSidePropsContext) {
//   const uid = await verifyAuthSSR(ctx);
//   if (uid == null) {

//     return {
//       props: {
//         data: null
//       }
//     }
//   }
//   console.log("Successfully Authenticated", uid)
//   // FETCH STUFF HERE!! ðŸš€
//   console.log("Trying to fetch: " + 'data/quotes/');
//   console.log("UID: " + uid)
//   const db = firebaseAdmin.firestore();
//   const itemObjects: ItemType[] = [];
//   const draftCollection = await db.collection("users/" + uid + "/data").get()
//   for (const doc of draftCollection.docs) {
//     const dataTypeResponse: ItemType | null = itemTypeFromFirebase(doc.id, doc.data());
//     if (dataTypeResponse != null) {
//       itemObjects.push(dataTypeResponse);
//     }
//   }
//   return {
//     props: {
//       data: JSON.parse(JSON.stringify(itemObjects))
//     }
//   }
// }


export default Home
